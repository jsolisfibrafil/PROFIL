<?xml version="1.0"?>
<doc>
<assembly>
<name>
PROFIL
</name>
</assembly>
<members>
<member name="T:PROFIL.DataSet1.U_VW_RQMNTDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:PROFIL.DataSet1.U_VW_RQMNTRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:PROFIL.DataSet1.U_VW_RQMNTRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:PROFIL.DataSet1">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:PROFIL.DataSet1TableAdapters.U_VW_RQMNTTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="P:PROFIL.Profil.info.Util.ConfigXml.GuardarAlAsignar">
	<summary>
 Indica si se se guardarán los datos cuando se añadan nuevos.
 </summary>
	<value>
 Indica si se se guardarán los datos cuando se añadan nuevos.
 </value>
	<returns>
 Un valor verdadero o falso según el valor de la propiedad
 </returns>
	<remarks>21/Feb/06</remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.GetValue(System.String,System.String)">
	<summary>
 Obtiene un valor de tipo cadena de la sección y clave indicadas.
 </summary>
	<param name="seccion">
 La sección de la que queremos obtener el valor
 </param>
	<param name="clave">
 La clave de la que queremos recuperar el valor
 </param>
	<returns>
 Un valor de tipo cadena con el valor de la sección y clave indicadas
 </returns>
	<remarks>
 Existe otra sobrecarga para indicar un valor predeterminado.
 Tanbién hay otras dos sobrecargas para valores enteros y boolean.
 </remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.GetValue(System.String,System.String,System.String)">
	<summary>
 Obtiene un valor de tipo cadena de la sección y clave indicadas.
 </summary>
	<param name="seccion">
 La sección de la que queremos obtener el valor
 </param>
	<param name="clave">
 La clave de la que queremos recuperar el valor
 </param>
	<param name="predeterminado">
 El valor predeterminado para cuando no exista.
 </param>
	<returns>
 Un valor de tipo cadena con el valor de la sección y clave indicadas
 </returns>
	<remarks></remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.GetValue(System.String,System.String,System.Int32)">
	<summary>
 Obtiene un valor de tipo entero de la sección y clave indicadas.
 </summary>
	<param name="seccion">
 La sección de la que queremos obtener el valor
 </param>
	<param name="clave">
 La clave de la que queremos recuperar el valor
 </param>
	<param name="predeterminado">
 El valor predeterminado para cuando no exista.
 </param>
	<returns>
 Un valor de tipo entero con el valor de la sección y clave indicadas
 </returns>
	<remarks></remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.GetValue(System.String,System.String,System.Boolean)">
	<summary>
 Obtiene un valor de tipo boolean de la sección y clave indicadas.
 </summary>
	<param name="seccion">
 La sección de la que queremos obtener el valor
 </param>
	<param name="clave">
 La clave de la que queremos recuperar el valor
 </param>
	<param name="predeterminado">
 El valor predeterminado para cuando no exista.
 </param>
	<returns>
 Un valor de tipo boolean con el valor de la sección y clave indicadas
 </returns>
	<remarks>
 Internamente el valor se guarda con un cero para False y uno para True
 </remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.SetValue(System.String,System.String,System.String)">
	<summary>
 Asignar un valor de tipo cadena en la sección y clave indicadas.
 </summary>
	<param name="seccion">
 La sección de la que queremos obtener el valor
 </param>
	<param name="clave">
 La clave de la que queremos recuperar el valor</param>
	<param name="valor">
 El valor a asignar</param>
	<remarks>
 El valor se guardar como un elemento de la sección indicada.
 <seealso cref="SetKeyValue"/>
	</remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.SetValue(System.String,System.String,System.Int32)">
	<summary>
 Asignar un valor de tipo entero en la sección y clave indicadas.
 </summary>
	<param name="seccion">
 La sección de la que queremos obtener el valor</param>
	<param name="clave">
 La clave de la que queremos recuperar el valor</param>
	<param name="valor">
 El valor a asignar</param>
	<remarks>
 El valor se guardar como un elemento de la sección indicada.
 El valor siempre se guarda como un valor de cadena.
 <seealso cref="SetKeyValue"/>
	</remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.SetValue(System.String,System.String,System.Boolean)">
	<summary>
 Asignar un valor de tipo boolean en la sección y clave indicadas.
 </summary>
	<param name="seccion">
 La sección de la que queremos obtener el valor</param>
	<param name="clave">
 La clave de la que queremos recuperar el valor</param>
	<param name="valor">
 El valor a asignar</param>
	<remarks>
 El valor se guardar como un elemento de la sección indicada.
 El valor siempre se guarda como un valor de cadena, siendo un 1 para True y 0 para False.
 <seealso cref="SetKeyValue"/>
	</remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.SetKeyValue(System.String,System.String,System.String)">
	<summary>
 Asigna un valor de tipo cadena en la sección y clave indicadas.
 </summary>
	<param name="seccion">
 La sección de la que queremos obtener el valor</param>
	<param name="clave">
 La clave de la que queremos recuperar el valor</param>
	<param name="valor">
 El valor a asignar</param>
	<remarks>
 El valor se guarda como un atributo de la sección indicada.
 La clave se guarda con el atributo key y el valor con el atributo value.
 <seealso cref="SetValue"/>
	</remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.SetKeyValue(System.String,System.String,System.Int32)">
	<summary>
 Asigna un valor de tipo entero en la sección y clave indicadas.
 </summary>
	<param name="seccion">
 La sección de la que queremos obtener el valor</param>
	<param name="clave">
 La clave de la que queremos recuperar el valor</param>
	<param name="valor">
 El valor a asignar</param>
	<remarks>
 El valor se guarda como un atributo de la sección indicada.
 La clave se guarda con el atributo key y el valor con el atributo value.
 El valor siempre se guarda como un valor de cadena.
 <seealso cref="SetValue"/>
	</remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.SetKeyValue(System.String,System.String,System.Boolean)">
	<summary>
 Asigna un valor de tipo boolean en la sección y clave indicadas.
 </summary>
	<param name="seccion">
 La sección de la que queremos obtener el valor</param>
	<param name="clave">
 La clave de la que queremos recuperar el valor</param>
	<param name="valor">
 El valor a asignar</param>
	<remarks>
 El valor se guarda como un atributo de la sección indicada.
 La clave se guarda con el atributo key y el valor con el atributo value.
 El valor siempre se guarda como un valor de cadena, siendo un 1 para True y 0 para False.
 <seealso cref="SetValue"/>
	</remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.RemoveSection(System.String)">
	<summary>
 Elimina la sección indicada, aunque en realidad la deja vacía.
 </summary>
	<param name="seccion">
 La sección a eliminar.</param>
	<remarks></remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.filtrarNombre(System.String)">
	<summary>
 Función de apoyo para filtrar los caracteres no permitidos
 </summary>
	<param name="nombre">
 El nombre a filtrar</param>
	<returns>
 El nombre filtrado</returns>
	<remarks>
 Usar esta función internamente para que las secciones y claves
 no incluyan los caracteres indicados en la constante noPermitidos
 </remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.RemoveKey(System.String,System.String)">
	<summary>
 Eliminar la clave indicada
 </summary>
	<param name="seccion">
 La sección en la que está la clave a eliminar
 </param>
	<param name="clave">
 La clave a eliminar
 </param>
	<returns>
 Devuelve True si se borró, en otro caso, devuelve False
 </returns>
	<remarks>
 15/Ene/07
 Los valores al estilo de appSettings no se borran
 </remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.Save">
	<summary>
 Guardar el fichero de configuración.
 </summary>
	<remarks>
 Si no se llama a este método, no se guardará de forma permanente.
 Para guardar automáticamente al asignar,
 asignar un valor verdadero a la propiedad 
 <see cref="GuardarAlAsignar">GuardarAlAsignar</see>
	</remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.Read">
	<summary>
 Lee el fichero de configuración.
 </summary>
	<remarks>
 Si no existe, se crea uno nuevo con los valores predeterminados.
 </remarks>
</member><member name="P:PROFIL.Profil.info.Util.ConfigXml.FileName">
	<summary>
 El nombre del fichero de configuración.
 </summary>
	<value>
 El path completo con el nombre del fichero de configuración.</value>
	<returns>
 Una cadena con el fichero de configuración.</returns>
	<remarks>
 El nombre del fichero se debe indicar en el constructor.
 </remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.#ctor(System.String)">
	<summary>
 Constructor en el que indicamos el nombre del fichero de configuración.
 </summary>
	<param name="fic">
 El fichero a usar para guardar los datos de configuración.
 </param>
	<remarks>
 Si no existe, se creará.
 Al usar este constructor, por defecto se guardarán los valores al asignarlos.
 </remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.#ctor(System.String,System.Boolean)">
	<summary>
 Constructor en el que indicamos el nombre del fichero de configuración
 y si guardamos o no automáticamente.
 </summary>
	<param name="fic">
 El fichero a usar para guardar los datos de configuración.</param>
	<param name="guardarAlAsignar">
 Un valor verdadero o falso para indicar
 si se guardan los datos automáticamente al asignarlos.</param>
	<remarks>21/Feb/06</remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.Secciones">
	<summary>
 Devuelve una colección de tipo List con las secciones del fichero de configuración.
 </summary>
	<returns>
 Una colección de tipo List(Of String) con las secciones del fichero de configuración.
 </returns>
	<remarks>
 21/Feb/06
 Este método solo se puede usar en la .NET 2.0 o superior.
 </remarks>
</member><member name="M:PROFIL.Profil.info.Util.ConfigXml.Claves(System.String)">
	<summary>
 Devuelve una colección de tipo Dictionary con las claves y valores de la sección indicada.
 </summary>
	<param name="seccion">
 La sección de la que queremos obtener las claves y valores.
 </param>
	<returns>
 Una colección de tipo Dictionary(Of String, String) con las claves y valores.
 </returns>
	<remarks>
 21/Feb/06
 Este método solo se puede usar en la .NET 2.0 o superior.
 15/Ene/07: También se devuelven los valores internos:
 <![CDATA[ <Prueba2 Uno="Valor de uno" /> ]]>
 En este caso, Prueba2 es una sección y Uno es una clave.
 15/Ene/07: También lee los pares valor/clave, por ejemplo:
 <![CDATA[ <section name="General" type="System.Configuration.DictionarySectionHandler" /> ]]>
		<![CDATA[ <add key="Revisión" value="Tue, 21 Feb 2006 19:45:00 GMT" /> ]]>
 Antes solo devolvía section en el primer caso y add en el segundo,
 ahora devuelve como clave el contenido de name/key y como valor type/value
 respectivamente.
 Nota sobre los comentarios insertados en el fichero de configuración:
 Las claves #comment se devuelven numeradas, por tanto el valor devuelto
 por esta colección no será el nombre real de ese nombre.
 </remarks>
</member><member name="M:PROFIL.BarCode.EAN13CalcChecksum(System.String)">
	<summary>
 Esta función devuelve el dígito de control para un código EAN13
 </summary>
	<param name="_code">Código EAN de 12 *** DOCE *** números</param>
	<returns>Se devuelve como un string el digito 13 que es el dígito de control</returns>
	<remarks></remarks>
</member><member name="T:PROFIL.PackingAlm.packingalmDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:PROFIL.PackingAlm.packingalmRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:PROFIL.PackingAlm.packingalmRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:PROFIL.PackingAlm">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="P:PROFIL.My.Resources.Resources.ResourceManager">
	<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member><member name="P:PROFIL.My.Resources.Resources.Culture">
	<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso con establecimiento inflexible de tipos.
</summary>
</member><member name="T:PROFIL.My.Resources.Resources">
	<summary>
  Clase de recurso con establecimiento inflexible de tipos, para buscar cadenas traducidas, etc.
</summary>
</member>
</members>
</doc>